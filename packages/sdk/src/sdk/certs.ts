/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { certsGetById } from "../funcs/certsGetById.js";
import { certsIssue } from "../funcs/certsIssue.js";
import { certsRemove } from "../funcs/certsRemove.js";
import { certsUpload } from "../funcs/certsUpload.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Certs extends ClientSDK {
  /**
   * Get cert by id
   *
   * @remarks
   * Get cert by id
   */
  async getById(
    request: operations.GetCertByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetCertByIdResponseBody> {
    return unwrapAsync(certsGetById(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove cert
   *
   * @remarks
   * Remove cert
   */
  async remove(
    request: operations.RemoveCertRequest,
    options?: RequestOptions,
  ): Promise<operations.RemoveCertResponseBody> {
    return unwrapAsync(certsRemove(
      this,
      request,
      options,
    ));
  }

  /**
   * Issue a new cert
   *
   * @remarks
   * Issue a new cert
   */
  async issue(
    request: operations.IssueCertRequest,
    options?: RequestOptions,
  ): Promise<operations.IssueCertResponseBody> {
    return unwrapAsync(certsIssue(
      this,
      request,
      options,
    ));
  }

  /**
   * Upload a cert
   *
   * @remarks
   * Upload a cert
   */
  async upload(
    request: operations.UploadCertRequest,
    options?: RequestOptions,
  ): Promise<operations.UploadCertResponseBody> {
    return unwrapAsync(certsUpload(
      this,
      request,
      options,
    ));
  }
}

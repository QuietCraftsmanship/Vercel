/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type UnpauseProjectRequest = {
  /**
   * The unique project identifier
   */
  projectId: string;
  /**
   * The Team identifier to perform the request on behalf of.
   */
  teamId?: string | undefined;
  /**
   * The Team slug to perform the request on behalf of.
   */
  slug?: string | undefined;
};

/**
 * Project successfully unpaused
 */
export type UnpauseProjectResponseBody = {
  success?: any | undefined;
  type?: any | undefined;
  description?: any | undefined;
  example?: any | undefined;
};

/** @internal */
export const UnpauseProjectRequest$inboundSchema: z.ZodType<
  UnpauseProjectRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectId: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/** @internal */
export type UnpauseProjectRequest$Outbound = {
  projectId: string;
  teamId?: string | undefined;
  slug?: string | undefined;
};

/** @internal */
export const UnpauseProjectRequest$outboundSchema: z.ZodType<
  UnpauseProjectRequest$Outbound,
  z.ZodTypeDef,
  UnpauseProjectRequest
> = z.object({
  projectId: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnpauseProjectRequest$ {
  /** @deprecated use `UnpauseProjectRequest$inboundSchema` instead. */
  export const inboundSchema = UnpauseProjectRequest$inboundSchema;
  /** @deprecated use `UnpauseProjectRequest$outboundSchema` instead. */
  export const outboundSchema = UnpauseProjectRequest$outboundSchema;
  /** @deprecated use `UnpauseProjectRequest$Outbound` instead. */
  export type Outbound = UnpauseProjectRequest$Outbound;
}

/** @internal */
export const UnpauseProjectResponseBody$inboundSchema: z.ZodType<
  UnpauseProjectResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.any().optional(),
  type: z.any().optional(),
  description: z.any().optional(),
  example: z.any().optional(),
});

/** @internal */
export type UnpauseProjectResponseBody$Outbound = {
  success?: any | undefined;
  type?: any | undefined;
  description?: any | undefined;
  example?: any | undefined;
};

/** @internal */
export const UnpauseProjectResponseBody$outboundSchema: z.ZodType<
  UnpauseProjectResponseBody$Outbound,
  z.ZodTypeDef,
  UnpauseProjectResponseBody
> = z.object({
  success: z.any().optional(),
  type: z.any().optional(),
  description: z.any().optional(),
  example: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnpauseProjectResponseBody$ {
  /** @deprecated use `UnpauseProjectResponseBody$inboundSchema` instead. */
  export const inboundSchema = UnpauseProjectResponseBody$inboundSchema;
  /** @deprecated use `UnpauseProjectResponseBody$outboundSchema` instead. */
  export const outboundSchema = UnpauseProjectResponseBody$outboundSchema;
  /** @deprecated use `UnpauseProjectResponseBody$Outbound` instead. */
  export type Outbound = UnpauseProjectResponseBody$Outbound;
}
